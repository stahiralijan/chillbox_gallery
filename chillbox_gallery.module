<?php

	/**
	 * Implements hook_enable().
	 */
	function chillbox_gallery_enable() 
	{
		$myField_name = "gallery_images";
		if(!field_info_field($myField_name)) // check if the field already exists.
		{
			$field = array(
				'field_name' => $myField_name,
				'type'       => 'image',
				'cardinality' => FIELD_CARDINALITY_UNLIMITED,
			);
			field_create_field($field);

			$field_instance = array(
				'field_name'  => $myField_name,
				'entity_type' => 'node',
				'bundle'      => 'article',
				'label'       => t('ChillBox Gallery Images'),
				'description' => t(''),
				'widget'      => array(
					'type'    => 'image_image',
					'weight'  => 10,
					'preview_image_style' => 'thumbnail',
					'progress_indicator'  => 'throbber',
				),
				'formatter'  => array(
					'label'  => t('label'),
					'format' => 'image'
				),
				'required' => TRUE,
				'settings'      => array(
					'file_directory'      => 'photos', // save inside "public://photos"
					'max_filesize'        => '20M',
					'title_field'         => TRUE,
					'alt_field'           => FALSE,
					'alt_field'           => true,
				),
			);
			field_create_instance($field_instance);
		}
	}

	/**
	 * Implements hook_disable().
	 */
	function chillbox_gallery_disable() 
	{
		if(variable_get('remove_gallery_field', false))
		{
			$myField_name = "gallery_images";
			$instance = array(
				'field_name' => $myField_name,
				'entity_type' => 'node',
				'bundle' => 'article',
			);
			field_delete_instance($instance);
			field_delete_field($instance['field_name']);
		}
	}

	/**
	 * Implements hook_preprocess_page().
	 */
	function chillbox_gallery_preprocess_page(&$variables) 
	{
		drupal_add_css(drupal_get_path('module', 'chillbox_gallery').'/css/chillbox.css');
		drupal_add_js(drupal_get_path('module', 'chillbox_gallery') . '/js/chillbox-packed.js');

		drupal_add_js(
			"jQuery(document).ready(function(){jQuery('[rel$=ChillBoxGroup]').ChillBox();});",
			array('type' => 'inline','scope' => 'footer','weight' =>5));
	}

	/**
	 * Implements hook_theme_registry_alter().
	 */
	function chillbox_gallery_theme_registry_alter(&$theme_registry) 
	{
		$theme_registry['field']['theme path'] = drupal_get_path('module', 'chillbox_gallery').'/templates';
		$theme_registry['field']['function'] = 'chillbox_gallery_theme_field_callback';
	}

	function chillbox_gallery_theme_field_callback(&$vars)
	{
		$elem = $vars['element'];
		if($elem['#field_name'] == 'gallery_images')
		{
			$output = '';
			if(count($vars['items']))
			{
				$output .= "<h3>Gallery</h3>";
				$output .= '<ul class="chillbox-gallery" style="margin:0;padding:0">';
				$i = 0;
				foreach($vars['items'] as $item)
				{
					$filename = $item['#item']['filename'];
					$imgPath = url('sites/default/files/photos/'.$filename, array('absolute'=>true));
					$thumbnail = image_style_url('thumbnail', $item['#item']['uri']);
					$title = $item['#item']['title'];
					$alt = $item['#item']['alt'];

					$output .= '<li';
					if(variable_get('gallery_items_inline', true))
					{
						$output .= ' class="inline"';
					}
					$output .= '>';
					$output .= "<a href='$imgPath' title='$title' rel='ChillBoxGroup' chillbox-position='".($i++)."'>";
					if(variable_get('show_titles', true) && variable_get('title_position', 2) == 1)
					{
						$output .= "<span class='caption'>$title</span>";
					}
					$output .= "<img src='$thumbnail' alt='$alt'/>";
					if(variable_get('show_titles', true) && variable_get('title_position', 2) == 2)
					{
						$output .= "<span class='caption'>$title</span>";
					}
					$output .= '</a>';
					$output .= '</li>';
				}
				$output .= '</ul>';
			}
			else
			{
				$output .= "<h3>Galery is empty!</h3>";
			}
			return $output;
		}
	}

	/**
	 * Implements hook_menu().
	 */
	function chillbox_gallery_menu() 
	{
		$items = array();

		$items['chillbox_gallery/settings'] = array(
			'title'            	=> t('ChillBox Gallery Module Settings'),
			'page callback' 	=> 'drupal_get_form',
			'page arguments' 	=> ['settings_callback'],
			'access arguments' 	=> ['access content'],
			'weight'           	=> 1,
			'type'				=> MENU_LOCAL_TASK,
		);
		return $items;
	}

	function settings_callback($form, &$form_state)
	{
		$form['gallery_items_inline'] = [
			'#type' => 'checkbox',
			'#title' => t('Gallery Items are shown as tiles'),
			'#default_value' => variable_get('gallery_items_inline', true),
		];
		$form['titles']['show_titles'] = [
			'#type' => 'checkbox',
			'#title' => t('Show titles with thumbnails?'),
			'#attributes' => variable_get('show_titles', true) ? array('checked' => 'checked') : null,
			'#default_value' => variable_get('show_titles', true),
		];
		$form['titles']['title_position'] = [
			'#type' => 'select',
			'#title' => t('Title position'),
			'#options' => [
				1 => t('Above thumbnails'),
				2 => t('Below thumbnails'),
			],
			'#default_value' => variable_get('title_position', 2),
		];
		$form['remove_gallery_field'] = [
			'#type' => 'checkbox',
			'#title' => t('Remove the gallery field on disabling the module?'),
			'#attributes' => variable_get('remove_gallery_field', false) ? array('checked' => 'checked') : null,
			'#default_value' => variable_get('remove_gallery_field', false),
		];
		return system_settings_form($form);
	}